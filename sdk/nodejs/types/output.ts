// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../types/output";

export interface BaremetalServerBetaIp {
    address: string;
    id: string;
    reverse: string;
}

export interface DatabaseInstanceBetaReadReplica {
    ip: string;
    name: string;
    port: number;
}

export interface GetBaremetalOfferBetaCpu {
    coreCount: number;
    frequency: number;
    name: string;
    threadCount: number;
}

export interface GetBaremetalOfferBetaDisk {
    capacity: number;
    type: string;
}

export interface GetBaremetalOfferBetaMemory {
    capacity: number;
    ecc: boolean;
    frequency: number;
    type: string;
}

export interface GetInstanceSecurityGroupInboundRule {
    action: string;
    ip: string;
    ipRange: string;
    port: number;
    portRange: string;
    protocol: string;
}

export interface GetInstanceSecurityGroupOutboundRule {
    action: string;
    ip: string;
    ipRange: string;
    port: number;
    portRange: string;
    protocol: string;
}

export interface GetInstanceServerRootVolume {
    deleteOnTermination: boolean;
    sizeInGb: number;
    volumeId: string;
}

export interface GetInstanceServerUserData {
    key: string;
    value: string;
}

export interface InstanceSecurityGroupInboundRule {
    action: string;
    ip?: string;
    ipRange?: string;
    port?: number;
    portRange?: string;
    protocol?: string;
}

export interface InstanceSecurityGroupOutboundRule {
    action: string;
    ip?: string;
    ipRange?: string;
    port?: number;
    portRange?: string;
    protocol?: string;
}

export interface InstanceSecurityGroupRulesInboundRule {
    action: string;
    ip?: string;
    ipRange?: string;
    port?: number;
    portRange?: string;
    protocol?: string;
}

export interface InstanceSecurityGroupRulesOutboundRule {
    action: string;
    ip?: string;
    ipRange?: string;
    port?: number;
    portRange?: string;
    protocol?: string;
}

export interface InstanceServerRootVolume {
    deleteOnTermination?: boolean;
    sizeInGb: number;
    volumeId: string;
}

export interface InstanceServerUserData {
    key: string;
    value: string;
}

export interface KubernetesClusterBetaAutoUpgrade {
    enable: boolean;
    maintenanceWindowDay: string;
    maintenanceWindowStartHour: number;
}

export interface KubernetesClusterBetaAutoscalerConfig {
    balanceSimilarNodeGroups?: boolean;
    disableScaleDown?: boolean;
    estimator?: string;
    expander?: string;
    expendablePodsPriorityCutoff?: number;
    ignoreDaemonsetsUtilization?: boolean;
    scaleDownDelayAfterAdd?: string;
}

export interface KubernetesClusterBetaDefaultPool {
    autohealing?: boolean;
    autoscaling?: boolean;
    containerRuntime?: string;
    createdAt: string;
    maxSize: number;
    minSize?: number;
    nodeType: string;
    nodes: outputs.KubernetesClusterBetaDefaultPoolNode[];
    placementGroupId?: string;
    poolId: string;
    size: number;
    status: string;
    tags?: string[];
    updatedAt: string;
    waitForPoolReady?: boolean;
}

export interface KubernetesClusterBetaDefaultPoolNode {
    name: string;
    publicIp: string;
    publicIpV6: string;
    status: string;
}

export interface KubernetesClusterBetaKubeconfig {
    clusterCaCertificate: string;
    configFile: string;
    host: string;
    token: string;
}

export interface KubernetesNodePoolBetaNode {
    name: string;
    publicIp: string;
    publicIpV6: string;
    status: string;
}

export interface LoadbalancerBackendBetaHealthCheckHttp {
    code?: number;
    method?: string;
    uri: string;
}

export interface LoadbalancerBackendBetaHealthCheckHttps {
    code?: number;
    method?: string;
    uri: string;
}

export interface LoadbalancerBackendBetaHealthCheckTcp {

}

export interface LoadbalancerCertificateBetaCustomCertificate {
    certificateChain: string;
}

export interface LoadbalancerCertificateBetaLetsencrypt {
    commonName: string;
    subjectAlternativeNames?: string[];
}

export interface LoadbalancerFrontendBetaAcl {
    action: outputs.LoadbalancerFrontendBetaAclAction;
    match: outputs.LoadbalancerFrontendBetaAclMatch;
    name: string;
    organizationId: string;
    region: string;
}

export interface LoadbalancerFrontendBetaAclAction {
    type: string;
}

export interface LoadbalancerFrontendBetaAclMatch {
    httpFilter?: string;
    httpFilterValues?: string[];
    invert?: boolean;
    ipSubnets?: string[];
}

export interface ServerVolume {
    sizeInGb: number;
    /**
     * type of server
     */
    type: string;
    volumeId: string;
}
