// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Scaleway
{
    public static class GetInstanceImage
    {
        /// <summary>
        /// Gets information about an instance image.
        /// 
        /// {{% examples %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetInstanceImageResult> InvokeAsync(GetInstanceImageArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetInstanceImageResult>("scaleway:index/getInstanceImage:getInstanceImage", args ?? new GetInstanceImageArgs(), options.WithVersion());
    }


    public sealed class GetInstanceImageArgs : Pulumi.InvokeArgs
    {
        [Input("architecture")]
        public string? Architecture { get; set; }

        [Input("imageId")]
        public string? ImageId { get; set; }

        [Input("latest")]
        public bool? Latest { get; set; }

        [Input("name")]
        public string? Name { get; set; }

        [Input("organizationId")]
        public string? OrganizationId { get; set; }

        [Input("zone")]
        public string? Zone { get; set; }

        public GetInstanceImageArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetInstanceImageResult
    {
        public readonly ImmutableArray<string> AdditionalVolumeIds;
        public readonly string? Architecture;
        public readonly string CreationDate;
        public readonly string DefaultBootscriptId;
        public readonly string FromServerId;
        /// <summary>
        /// id is the provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? ImageId;
        public readonly bool? Latest;
        public readonly string ModificationDate;
        public readonly string? Name;
        public readonly string OrganizationId;
        public readonly bool Public;
        public readonly string RootVolumeId;
        public readonly string State;
        public readonly string Zone;

        [OutputConstructor]
        private GetInstanceImageResult(
            ImmutableArray<string> additionalVolumeIds,

            string? architecture,

            string creationDate,

            string defaultBootscriptId,

            string fromServerId,

            string id,

            string? imageId,

            bool? latest,

            string modificationDate,

            string? name,

            string organizationId,

            bool @public,

            string rootVolumeId,

            string state,

            string zone)
        {
            AdditionalVolumeIds = additionalVolumeIds;
            Architecture = architecture;
            CreationDate = creationDate;
            DefaultBootscriptId = defaultBootscriptId;
            FromServerId = fromServerId;
            Id = id;
            ImageId = imageId;
            Latest = latest;
            ModificationDate = modificationDate;
            Name = name;
            OrganizationId = organizationId;
            Public = @public;
            RootVolumeId = rootVolumeId;
            State = state;
            Zone = zone;
        }
    }
}
