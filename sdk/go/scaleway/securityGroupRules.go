// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package scaleway

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Creates and manages Scaleway Compute Instance security group rules. For more information, see [the documentation](https://developers.scaleway.com/en/products/instance/api/#security-groups-8d7f89).
type SecurityGroupRules struct {
	pulumi.CustomResourceState

	// Inbound rules for this set of security group rules
	InboundRules SecurityGroupRulesInboundRuleArrayOutput `pulumi:"inboundRules"`
	// Outbound rules for this set of security group rules
	OutboundRules SecurityGroupRulesOutboundRuleArrayOutput `pulumi:"outboundRules"`
	// The security group associated with this volume
	SecurityGroupId pulumi.StringOutput `pulumi:"securityGroupId"`
}

// NewSecurityGroupRules registers a new resource with the given unique name, arguments, and options.
func NewSecurityGroupRules(ctx *pulumi.Context,
	name string, args *SecurityGroupRulesArgs, opts ...pulumi.ResourceOption) (*SecurityGroupRules, error) {
	if args == nil || args.SecurityGroupId == nil {
		return nil, errors.New("missing required argument 'SecurityGroupId'")
	}
	if args == nil {
		args = &SecurityGroupRulesArgs{}
	}
	var resource SecurityGroupRules
	err := ctx.RegisterResource("scaleway:index/securityGroupRules:SecurityGroupRules", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSecurityGroupRules gets an existing SecurityGroupRules resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSecurityGroupRules(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SecurityGroupRulesState, opts ...pulumi.ResourceOption) (*SecurityGroupRules, error) {
	var resource SecurityGroupRules
	err := ctx.ReadResource("scaleway:index/securityGroupRules:SecurityGroupRules", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SecurityGroupRules resources.
type securityGroupRulesState struct {
	// Inbound rules for this set of security group rules
	InboundRules []SecurityGroupRulesInboundRule `pulumi:"inboundRules"`
	// Outbound rules for this set of security group rules
	OutboundRules []SecurityGroupRulesOutboundRule `pulumi:"outboundRules"`
	// The security group associated with this volume
	SecurityGroupId *string `pulumi:"securityGroupId"`
}

type SecurityGroupRulesState struct {
	// Inbound rules for this set of security group rules
	InboundRules SecurityGroupRulesInboundRuleArrayInput
	// Outbound rules for this set of security group rules
	OutboundRules SecurityGroupRulesOutboundRuleArrayInput
	// The security group associated with this volume
	SecurityGroupId pulumi.StringPtrInput
}

func (SecurityGroupRulesState) ElementType() reflect.Type {
	return reflect.TypeOf((*securityGroupRulesState)(nil)).Elem()
}

type securityGroupRulesArgs struct {
	// Inbound rules for this set of security group rules
	InboundRules []SecurityGroupRulesInboundRule `pulumi:"inboundRules"`
	// Outbound rules for this set of security group rules
	OutboundRules []SecurityGroupRulesOutboundRule `pulumi:"outboundRules"`
	// The security group associated with this volume
	SecurityGroupId string `pulumi:"securityGroupId"`
}

// The set of arguments for constructing a SecurityGroupRules resource.
type SecurityGroupRulesArgs struct {
	// Inbound rules for this set of security group rules
	InboundRules SecurityGroupRulesInboundRuleArrayInput
	// Outbound rules for this set of security group rules
	OutboundRules SecurityGroupRulesOutboundRuleArrayInput
	// The security group associated with this volume
	SecurityGroupId pulumi.StringInput
}

func (SecurityGroupRulesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*securityGroupRulesArgs)(nil)).Elem()
}
