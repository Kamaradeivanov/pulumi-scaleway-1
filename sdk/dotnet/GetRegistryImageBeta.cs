// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Scaleway
{
    public static class GetRegistryImageBeta
    {
        /// <summary>
        /// Gets information about a registry image.
        /// 
        /// {{% examples %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetRegistryImageBetaResult> InvokeAsync(GetRegistryImageBetaArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetRegistryImageBetaResult>("scaleway:index/getRegistryImageBeta:getRegistryImageBeta", args ?? new GetRegistryImageBetaArgs(), options.WithVersion());
    }


    public sealed class GetRegistryImageBetaArgs : Pulumi.InvokeArgs
    {
        [Input("imageId")]
        public string? ImageId { get; set; }

        [Input("name")]
        public string? Name { get; set; }

        [Input("namespaceId")]
        public string? NamespaceId { get; set; }

        [Input("organizationId")]
        public string? OrganizationId { get; set; }

        [Input("region")]
        public string? Region { get; set; }

        [Input("tags")]
        private List<string>? _tags;
        public List<string> Tags
        {
            get => _tags ?? (_tags = new List<string>());
            set => _tags = value;
        }

        public GetRegistryImageBetaArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetRegistryImageBetaResult
    {
        /// <summary>
        /// id is the provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? ImageId;
        public readonly string? Name;
        public readonly string NamespaceId;
        public readonly string OrganizationId;
        public readonly string Region;
        public readonly int Size;
        public readonly ImmutableArray<string> Tags;
        public readonly string Visibility;

        [OutputConstructor]
        private GetRegistryImageBetaResult(
            string id,

            string? imageId,

            string? name,

            string namespaceId,

            string organizationId,

            string region,

            int size,

            ImmutableArray<string> tags,

            string visibility)
        {
            Id = id;
            ImageId = imageId;
            Name = name;
            NamespaceId = namespaceId;
            OrganizationId = organizationId;
            Region = region;
            Size = size;
            Tags = tags;
            Visibility = visibility;
        }
    }
}
