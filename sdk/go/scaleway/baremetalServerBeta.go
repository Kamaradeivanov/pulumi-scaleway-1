// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package scaleway

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Creates and manages Scaleway Compute Baremetal servers. For more information, see [the documentation](https://developers.scaleway.com/en/products/baremetal/api).
type BaremetalServerBeta struct {
	pulumi.CustomResourceState

	// Some description to associate to the server, max 255 characters
	Description pulumi.StringPtrOutput           `pulumi:"description"`
	Domain      pulumi.StringOutput              `pulumi:"domain"`
	Ips         BaremetalServerBetaIpArrayOutput `pulumi:"ips"`
	// Name of the server
	Name pulumi.StringOutput `pulumi:"name"`
	// ID of the server type
	Offer pulumi.StringOutput `pulumi:"offer"`
	// The organization_id you want to attach the resource to
	OrganizationId pulumi.StringOutput `pulumi:"organizationId"`
	// The base image of the server
	OsId pulumi.StringOutput `pulumi:"osId"`
	// Array of SSH key IDs allowed to SSH to the server
	SshKeyIds pulumi.StringArrayOutput `pulumi:"sshKeyIds"`
	// Array of tags to associate with the server
	Tags pulumi.StringArrayOutput `pulumi:"tags"`
	// The zone you want to attach the resource to
	Zone pulumi.StringOutput `pulumi:"zone"`
}

// NewBaremetalServerBeta registers a new resource with the given unique name, arguments, and options.
func NewBaremetalServerBeta(ctx *pulumi.Context,
	name string, args *BaremetalServerBetaArgs, opts ...pulumi.ResourceOption) (*BaremetalServerBeta, error) {
	if args == nil || args.Offer == nil {
		return nil, errors.New("missing required argument 'Offer'")
	}
	if args == nil || args.OsId == nil {
		return nil, errors.New("missing required argument 'OsId'")
	}
	if args == nil || args.SshKeyIds == nil {
		return nil, errors.New("missing required argument 'SshKeyIds'")
	}
	if args == nil {
		args = &BaremetalServerBetaArgs{}
	}
	var resource BaremetalServerBeta
	err := ctx.RegisterResource("scaleway:index/baremetalServerBeta:BaremetalServerBeta", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBaremetalServerBeta gets an existing BaremetalServerBeta resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBaremetalServerBeta(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BaremetalServerBetaState, opts ...pulumi.ResourceOption) (*BaremetalServerBeta, error) {
	var resource BaremetalServerBeta
	err := ctx.ReadResource("scaleway:index/baremetalServerBeta:BaremetalServerBeta", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BaremetalServerBeta resources.
type baremetalServerBetaState struct {
	// Some description to associate to the server, max 255 characters
	Description *string                 `pulumi:"description"`
	Domain      *string                 `pulumi:"domain"`
	Ips         []BaremetalServerBetaIp `pulumi:"ips"`
	// Name of the server
	Name *string `pulumi:"name"`
	// ID of the server type
	Offer *string `pulumi:"offer"`
	// The organization_id you want to attach the resource to
	OrganizationId *string `pulumi:"organizationId"`
	// The base image of the server
	OsId *string `pulumi:"osId"`
	// Array of SSH key IDs allowed to SSH to the server
	SshKeyIds []string `pulumi:"sshKeyIds"`
	// Array of tags to associate with the server
	Tags []string `pulumi:"tags"`
	// The zone you want to attach the resource to
	Zone *string `pulumi:"zone"`
}

type BaremetalServerBetaState struct {
	// Some description to associate to the server, max 255 characters
	Description pulumi.StringPtrInput
	Domain      pulumi.StringPtrInput
	Ips         BaremetalServerBetaIpArrayInput
	// Name of the server
	Name pulumi.StringPtrInput
	// ID of the server type
	Offer pulumi.StringPtrInput
	// The organization_id you want to attach the resource to
	OrganizationId pulumi.StringPtrInput
	// The base image of the server
	OsId pulumi.StringPtrInput
	// Array of SSH key IDs allowed to SSH to the server
	SshKeyIds pulumi.StringArrayInput
	// Array of tags to associate with the server
	Tags pulumi.StringArrayInput
	// The zone you want to attach the resource to
	Zone pulumi.StringPtrInput
}

func (BaremetalServerBetaState) ElementType() reflect.Type {
	return reflect.TypeOf((*baremetalServerBetaState)(nil)).Elem()
}

type baremetalServerBetaArgs struct {
	// Some description to associate to the server, max 255 characters
	Description *string `pulumi:"description"`
	// Name of the server
	Name *string `pulumi:"name"`
	// ID of the server type
	Offer string `pulumi:"offer"`
	// The organization_id you want to attach the resource to
	OrganizationId *string `pulumi:"organizationId"`
	// The base image of the server
	OsId string `pulumi:"osId"`
	// Array of SSH key IDs allowed to SSH to the server
	SshKeyIds []string `pulumi:"sshKeyIds"`
	// Array of tags to associate with the server
	Tags []string `pulumi:"tags"`
	// The zone you want to attach the resource to
	Zone *string `pulumi:"zone"`
}

// The set of arguments for constructing a BaremetalServerBeta resource.
type BaremetalServerBetaArgs struct {
	// Some description to associate to the server, max 255 characters
	Description pulumi.StringPtrInput
	// Name of the server
	Name pulumi.StringPtrInput
	// ID of the server type
	Offer pulumi.StringInput
	// The organization_id you want to attach the resource to
	OrganizationId pulumi.StringPtrInput
	// The base image of the server
	OsId pulumi.StringInput
	// Array of SSH key IDs allowed to SSH to the server
	SshKeyIds pulumi.StringArrayInput
	// Array of tags to associate with the server
	Tags pulumi.StringArrayInput
	// The zone you want to attach the resource to
	Zone pulumi.StringPtrInput
}

func (BaremetalServerBetaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*baremetalServerBetaArgs)(nil)).Elem()
}
